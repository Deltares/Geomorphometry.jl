import{_ as n,c as r,j as s,a as i,G as a,a5 as l,w as o,B as p,o as d}from"./chunks/framework.De9caxpi.js";const v=JSON.parse('{"title":"Experimental","description":"","frontmatter":{},"headers":[],"relativePath":"experimental.md","filePath":"experimental.md","lastUpdated":null}'),c={name:"experimental.md"},h={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""};function k(u,e,b,g,y,f){const t=p("Badge");return d(),r("div",null,[e[8]||(e[8]=s("h1",{id:"experimental",tabindex:"-1"},[i("Experimental "),s("a",{class:"header-anchor",href:"#experimental","aria-label":'Permalink to "Experimental"'},"â€‹")],-1)),e[9]||(e[9]=s("div",{class:"warning custom-block github-alert"},[s("p",{class:"custom-block-title"},"Methods here are experimental, not yet stable and may change or even be removed in future releases."),s("p")],-1)),s("details",h,[s("summary",null,[e[0]||(e[0]=s("a",{id:"Geomorphometry.prominence",href:"#Geomorphometry.prominence"},[s("span",{class:"jlbinding"},"Geomorphometry.prominence")],-1)),e[1]||(e[1]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prominence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractMatrix{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Prominence calculates the number of cells that are lower or equal than the central cell. Thus, 8 is a local maximum (peak), while 0 is a local minimum (pit).</p>',2)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>e[2]||(e[2]=[s("a",{href:"https://github.com/Deltares/Geomorphometry.jl/blob/c118a3fca0c8af12f653008a5bb57bfac280ef48/src/relative.jl#LL75-L80",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s("details",m,[s("summary",null,[e[4]||(e[4]=s("a",{id:"Geomorphometry.skbr",href:"#Geomorphometry.skbr"},[s("span",{class:"jlbinding"},"Geomorphometry.skbr")],-1)),e[5]||(e[5]=i()),a(t,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> skbr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(A; iterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Applies recursive skewness balancing by <a href="/Geomorphometry.jl/dev/bibliography#bartelsThresholdfreeObjectGround2010">Bartels e.a (2010)</a> to <code>A</code>. Applies <code>skb</code> <code>iterations</code> times to the object (non-terrain) mask, as to include more (sloped) terrain.</p><p><strong>Output</strong></p><ul><li><code>mask::BitMatrix</code> Mask of allowed values</li></ul>',4)),a(t,{type:"info",class:"source-link",text:"source"},{default:o(()=>e[6]||(e[6]=[s("a",{href:"https://github.com/Deltares/Geomorphometry.jl/blob/c118a3fca0c8af12f653008a5bb57bfac280ef48/src/skew.jl#LL84-L93",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),e[10]||(e[10]=l('<div class="language-docs vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docs</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Geomorphometry.pmf2</span></span></code></pre></div>',1))])}const E=n(c,[["render",k]]);export{v as __pageData,E as default};
